<style>
    .row{ padding-bottom: 10px;}
    img{cursor: pointer;}
    .div-img-profile{display:inline-block; width:128px; height:128px;}
</style>
<div class="col-lg-8">
    <div class="panel panel-default">
        <div class="panel-heading">
            Novo Usuário
        </div>
        <!-- /.panel-heading -->
        <div class="panel-body">
            <form id="form-newuser" action="" method="POST" class="form-horizontal" enctype='multipart/form-data' target='ihide'>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-2 div-img-profile">
                            <img src="http://www.placecage.com/g/200/300"  name="preview_img" id="imgPreview_img" class="img-responsive img-thumbnail" alt="Image">
                        </div>
                        <div class="col-sm-10">
                            <input type="text" name="user_name" id="inputUser_name" class="form-control" value="" required="required" placeholder="Nome Completo">
                        </div>
                        <div class="col-sm-10">
                            <input type="email" name="user_email" id="inputUser_email" class="form-control" value="" required="required" placeholder="E-mail">
                        </div>
                        <div class="col-sm-5">
                            <input type="text" name="user_login" id="inputUser_login" class="form-control" value="" required="required" placeholder="Login">
                        </div>
                        <div class="col-sm-5">
                            <select name="user_type_id" id="inputUser_type_id" class="form-control" required="required">
                                <option selected="selected">Nível de Permissão</option>
                                <!--
                                    @todo: adicionar verificação se a tela está carregando para editar usuário.
                                                Se sim, verificar se o usuário a ser editado é um super administrador.
                                                Caso seja, exibir a opção super-administrador e bloquear a edição do select.
                                -->
                                <?php foreach ($types as $type){
                                    if($type->user_type_id != 1){?>
                                        <option value="<?= $type->user_type_id?>"><?= $type->user_type_descr ?></option>
                                    <?php }
                                } ?>
                            </select>
                        </div>
                        <div class="col-sm-5">
                            <input type="password" name="user_passwd" id="inputUser_passwd" class="form-control" required="required" placeholder="Senha">
                        </div>
                        <div class="col-sm-5">
                            <input type="password" name="user_passwd_confirm" id="inputUser_passwd_confirm" class="form-control" required="required" placeholder="Repetir Senha">
                        </div>
                        <div class="row"></div>
                        <div class="col-sm-2"></div>
                        <div class="col-sm-10">
                        <?php if(!$edit_user){ ?>
                            <button type="button" id="register" class="btn btn-primary center-block btn-lg">Cadastrar</button>
                        <?php }else{ ?>
                            <input type="hidden" name="user_id" id="inputUser_id" class="form-control" value="">
                            <button type="button" id="edit" class="btn btn-primary center-block btn-lg">Salvar</button>
                        <?php } ?>
                        </div>
                    </div>
                    <input type="file" name="user_img" id="inputUser_img" class="form-control hide" accept="image/*">
                </div>
            </form>
        </div>
        <!-- /.panel-body -->
    </div>
    <!-- /.panel-default -->
</div>
<!-- /.col-lg-8 -->

<script>

/**
 * Classe para manipulação do formulário
 */
var Form = function(){

    /**
     * Valida os dados inseridos no formulário
     */
    this.validateForm = function(edit_user){
        //Monta um array com os dados do formulário para verificação
        array_form = $("#form-newuser").serializeArray();
        var validate = true;

        //Verifica se todos os dados obrigatórios foram preenchidos
        $.each(array_form, function(i, field){
            if(field.value == '' && field.name != 'user_img'){
                swal({
                    title: "Atenção!",
                    text: "Por favor, preencha todos os dados antes de prosseguir!",
                    type: "error",
                    confirmButtonText: "OK"
                });
            validate = false;
            }
        });

        //Verifica se a senha e a confirmação de senha são iguais
        if(array_form['user_passwd'] != array_form['user_passwd_confirm']){
            swal({
                title: "Atenção!",
                text: "Senha e Repetir senha não conferem! Por favor tente novamente!",
                type: "error",
                confirmButtonText: "OK"
            });
            validate = false;
        }
        if(validate){
            formSubmit(edit_user);
        }
    }

    /**
     * Envia os dados do formulário para o servidor inserir no banco de dados
     * @param  {string} url caminho da action a ser chamada no servidor
     */
     var saveData = function(url){
        var swal = new Swal;
        var form_data =new FormData($("#form-newuser")[0]);
        $.ajax({
                url: url,
                data:  form_data,
                type: 'POST',
                dataType: 'json',
                async: false,
                success: function(data){
                    if(data.success){
                        swal.success('Dados Salvos com sucesso');
                    } else{
                        swal.error(data.message);
                    }
                },
                cache: false,
                contentType: false,
                processData: false,
                xhr: function() {  // Custom XMLHttpRequest
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) { // Avalia se tem suporte a propriedade upload
                        myXhr.upload.addEventListener('progress', function () {
                            //faz alguma coisa enquanto envia o arquivo
                        }, false);
                    }
                    return myXhr;
                }
            });
    }

    /**
     * Envia os dados preenchidos no formulário para o servidor inserir na base de dados
     */
    var formSubmit = function(edit_user){
        if(!edit_user){
            saveData('<?= URL_PROJECT ?>settings/addNewUser');
        } else{
            saveData('<?= URL_PROJECT ?>settings/editUser');
        }
    }

    /**
     * Preenche o formulário de cadastro para editar dados de usuários já cadastrados
     * @param  {json} data dados do usuário
     */
    this.fillForm = function(data){
        $("#inputUser_id").val(data.user_id);
        $("#inputUser_name").val(data.user_name);
        $("#inputUser_email").val(data.user_email);
        $("#inputUser_login").val(data.user_login);
        //Caso o usuário a ser editado seja o super administrador, carrega a opção no select
        //e desabilita a edição do mesmo.
        if(data.user_type_id == 1){
            $('#inputUser_type_id').attr("disabled", true);
            $("#inputUser_type_id").append(new Option("SUPER ADMINISTRADOR", "1"));
        }
        $("#inputUser_type_id").val(data.user_type_id);
    }
}

/**
 * Controla os avisos
 */
var Swal = function(){
    /**
     * Exibe uma mensagem de sucesso personalizada
     * @param  {string} message string com a mensagem a ser exibida na tela
     */
    this.success = function(message){
        swal({
            title: "Sucesso!",
            text: message,
            type: "success",
            confirmButtonText: "OK"
        });
    }

    /**
     * Exibe uma mensagem de erro personalizada
     * @param  {string} message string com a mensagem a ser exibida na tela
     */
    this.error = function(message){
        swal({
            title: "Atenção!",
            text: message,
            type: "error",
            confirmButtonText: "OK"
        });
    }
}

/**
 *Quando a view é carregada da tela listView recebe dados do usuário selecionado via post;
 *Então esses dados são salvos como objeto JSON na variavel data;
 */
var data = ('<?= json_encode($user); ?>');
var edit_user = ('<?= $edit_user ?>');
if(edit_user){
    console.log(data);
    form = new Form;
    form.fillForm(JSON.parse(data));
}
/**
 * Ao clicar no botão #register faz as validações necessárias e envia os dados para o servidor
 * Exibe uma mensagem de sucesso ou erro, dependendo da resposta do servidor
 */
$("#register").click(function(){
    form = new Form;
    form.validateForm(edit_user);
});

$("#edit").click(function(){
    form = new Form;
    form.validateForm(edit_user);
})

/**
 * Quando clica na imagem abre a opção para upload de arquivo
 */
$("#imgPreview_img").click(function(){
    $("#inputUser_img").click();
});

/**
 * Quando o usuário seleciona uma imagem para o perfil ela é pré-carregada no src #imgPreview_img
 */
$("#inputUser_img").change(function(){
    if (this.files && this.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $('#imgPreview_img').attr('src', e.target.result);
        }
        reader.readAsDataURL(this.files[0]);
    }
});
</script>